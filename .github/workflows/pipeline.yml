name: Pipeline Laboratorio DevSecOps
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  # Sonar:
  #   name: SonarCloud
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  # importante para análisis de "new code"

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'

  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@v2
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Check Quality Gate
  #       run: |
  #         echo "⏳ Esperando resultado de SonarCloud..."
  #         sleep 30
  #         QG=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: \
  #           "https://sonarcloud.io/api/qualitygates/project_status?projectKey=firodrigueza_laboratorio" \
  #           | jq -r '.projectStatus.status')

  #         echo "Resultado Quality Gate: $QG"
  #         if [ "$QG" != "OK" ]; then
  #           echo "❌ Se detectaron vulnerabilidades Críticas, Altas o Medias."
  #           exit 1
  #         else
  #           echo "✅ Sin vulnerabilidades relevantes."
  #         fi
  OwaspDC:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ejecutar OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "DevSecOps-Lab"
          path: "."
          format: "HTML"
          out: "reports"
      - name: Subir reporte como artefacto
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/
          
      - name: Mostrar resumen del reporte
        run: |
          echo "✅ Reporte generado en carpeta ./reports"
          ls -l reports || true
      
      - name: Validación reporte de OWASP Dependency Check
        run: |
          echo "Revisando severidades en el reporte"
          if grep -E "CRITICAL|HIGH|MEDIUM" -R reports/; then
            echo "❌ Vulnerabilidades detectadas en dependencias (SCA)."
            exit 1
          else
            echo "✅ SCA limpio. Sin vulnerabilidades críticas, altas ni medias."
          fi
      
      
  Build:
    name: Construccion Proyecto
    runs-on: ubuntu-latest
    needs: [OwaspDC]
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Construir imagen Docker
        run: |
          docker build -t firodrigueza_laboratorio:latest .

      - name: Listar imágenes
        run: docker images

